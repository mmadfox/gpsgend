// @generated by protobuf-ts 2.9.0
// @generated from protobuf file "proto/gpsgend/v1/events.proto" (package "proto.gpsgend.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message proto.gpsgend.v1.Event
 */
export interface Event {
    /**
     * @generated from protobuf field: proto.gpsgend.v1.Event.Kind kind = 1;
     */
    kind: Event_Kind;
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "trackerCreatedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerCreated tracker_created_event = 2;
         */
        trackerCreatedEvent: Event_TrackerCreated;
    } | {
        oneofKind: "trackerRemovedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerRemoved tracker_removed_event = 3;
         */
        trackerRemovedEvent: Event_TrackerRemoved;
    } | {
        oneofKind: "trackerUpdatedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerUpdated tracker_updated_event = 4;
         */
        trackerUpdatedEvent: Event_TrackerUpdated;
    } | {
        oneofKind: "trackerStartedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerStarted tracker_started_event = 5;
         */
        trackerStartedEvent: Event_TrackerStarted;
    } | {
        oneofKind: "trackerStoppedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerStopped tracker_stopped_event = 6;
         */
        trackerStoppedEvent: Event_TrackerStopped;
    } | {
        oneofKind: "trackerRoutesAddedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerRoutesAdded tracker_routes_added_event = 7;
         */
        trackerRoutesAddedEvent: Event_TrackerRoutesAdded;
    } | {
        oneofKind: "trackerRouteRemovedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerRouteRemoved tracker_route_removed_event = 8;
         */
        trackerRouteRemovedEvent: Event_TrackerRouteRemoved;
    } | {
        oneofKind: "trackerRoutesResetedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerRoutesReseted tracker_routes_reseted_event = 9;
         */
        trackerRoutesResetedEvent: Event_TrackerRoutesReseted;
    } | {
        oneofKind: "trackerNavigatorResetedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerNavigatorReseted tracker_navigator_reseted_event = 10;
         */
        trackerNavigatorResetedEvent: Event_TrackerNavigatorReseted;
    } | {
        oneofKind: "trackerNavigatorJumpedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerNavigatorJumped tracker_navigator_jumped_event = 11;
         */
        trackerNavigatorJumpedEvent: Event_TrackerNavigatorJumped;
    } | {
        oneofKind: "trackerSensorAddedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerSensorAdded tracker_sensor_added_event = 12;
         */
        trackerSensorAddedEvent: Event_TrackerSensorAdded;
    } | {
        oneofKind: "trackerSensorRemovedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerSensorRemoved tracker_sensor_removed_event = 13;
         */
        trackerSensorRemovedEvent: Event_TrackerSensorRemoved;
    } | {
        oneofKind: "trackerShutdownedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerShutdowned tracker_shutdowned_event = 14;
         */
        trackerShutdownedEvent: Event_TrackerShutdowned;
    } | {
        oneofKind: "trackerResumedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerResumed tracker_resumed_event = 15;
         */
        trackerResumedEvent: Event_TrackerResumed;
    } | {
        oneofKind: "trackerChangedEvent";
        /**
         * @generated from protobuf field: proto.gpsgend.v1.Event.TrackerChanged tracker_changed_event = 16;
         */
        trackerChangedEvent: Event_TrackerChanged;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerCreated
 */
export interface Event_TrackerCreated {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 created_at = 2;
     */
    createdAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerRemoved
 */
export interface Event_TrackerRemoved {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 2;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerUpdated
 */
export interface Event_TrackerUpdated {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 2;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerStarted
 */
export interface Event_TrackerStarted {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 2;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerStopped
 */
export interface Event_TrackerStopped {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 2;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerRoutesAdded
 */
export interface Event_TrackerRoutesAdded {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: repeated string routes_id = 2;
     */
    routesId: string[];
    /**
     * @generated from protobuf field: int64 updated_at = 3;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerRouteRemoved
 */
export interface Event_TrackerRouteRemoved {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: string route_id = 2;
     */
    routeId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 3;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerRoutesReseted
 */
export interface Event_TrackerRoutesReseted {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 2;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerNavigatorReseted
 */
export interface Event_TrackerNavigatorReseted {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 2;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerNavigatorJumped
 */
export interface Event_TrackerNavigatorJumped {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 2;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerSensorAdded
 */
export interface Event_TrackerSensorAdded {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: string senesor_id = 2;
     */
    senesorId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 3;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerSensorRemoved
 */
export interface Event_TrackerSensorRemoved {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: string senesor_id = 2;
     */
    senesorId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 3;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerShutdowned
 */
export interface Event_TrackerShutdowned {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 3;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerResumed
 */
export interface Event_TrackerResumed {
    /**
     * @generated from protobuf field: string tracker_id = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: int64 updated_at = 3;
     */
    updatedAt: bigint;
}
/**
 * @generated from protobuf message proto.gpsgend.v1.Event.TrackerChanged
 */
export interface Event_TrackerChanged {
    /**
     * @generated from protobuf field: bytes packet = 1;
     */
    packet: Uint8Array;
}
/**
 * @generated from protobuf enum proto.gpsgend.v1.Event.Kind
 */
export enum Event_Kind {
    /**
     * @generated from protobuf enum value: TRACKER_UNKNOWN = 0;
     */
    TRACKER_UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: TRACKER_CREATED = 1;
     */
    TRACKER_CREATED = 1,
    /**
     * @generated from protobuf enum value: TRACKER_REMOVED = 2;
     */
    TRACKER_REMOVED = 2,
    /**
     * @generated from protobuf enum value: TRACKER_UPDATED = 3;
     */
    TRACKER_UPDATED = 3,
    /**
     * @generated from protobuf enum value: TRACKER_STARTED = 4;
     */
    TRACKER_STARTED = 4,
    /**
     * @generated from protobuf enum value: TRACKER_STOPPED = 6;
     */
    TRACKER_STOPPED = 6,
    /**
     * @generated from protobuf enum value: TRACKER_ROUTE_ADDED = 7;
     */
    TRACKER_ROUTE_ADDED = 7,
    /**
     * @generated from protobuf enum value: TRACKER_ROUTE_REMOVED = 8;
     */
    TRACKER_ROUTE_REMOVED = 8,
    /**
     * @generated from protobuf enum value: TRACKER_ROUTES_RESETED = 9;
     */
    TRACKER_ROUTES_RESETED = 9,
    /**
     * @generated from protobuf enum value: TRACKER_NAVIGATOR_RESETED = 10;
     */
    TRACKER_NAVIGATOR_RESETED = 10,
    /**
     * @generated from protobuf enum value: TRACKER_NAVIGATOR_JUMPED = 11;
     */
    TRACKER_NAVIGATOR_JUMPED = 11,
    /**
     * @generated from protobuf enum value: TRACKER_SENSOR_ADDED = 12;
     */
    TRACKER_SENSOR_ADDED = 12,
    /**
     * @generated from protobuf enum value: TRACKER_SENSOR_REMOVED = 13;
     */
    TRACKER_SENSOR_REMOVED = 13,
    /**
     * @generated from protobuf enum value: TRACKER_SHUTDOWNED = 14;
     */
    TRACKER_SHUTDOWNED = 14,
    /**
     * @generated from protobuf enum value: TRACKER_RESUMED = 15;
     */
    TRACKER_RESUMED = 15,
    /**
     * @generated from protobuf enum value: TRACKER_CHANGED = 16;
     */
    TRACKER_CHANGED = 16
}
// @generated message type with reflection information, may provide speed optimized methods
class Event$Type extends MessageType<Event> {
    constructor() {
        super("proto.gpsgend.v1.Event", [
            { no: 1, name: "kind", kind: "enum", T: () => ["proto.gpsgend.v1.Event.Kind", Event_Kind] },
            { no: 2, name: "tracker_created_event", kind: "message", oneof: "payload", T: () => Event_TrackerCreated },
            { no: 3, name: "tracker_removed_event", kind: "message", oneof: "payload", T: () => Event_TrackerRemoved },
            { no: 4, name: "tracker_updated_event", kind: "message", oneof: "payload", T: () => Event_TrackerUpdated },
            { no: 5, name: "tracker_started_event", kind: "message", oneof: "payload", T: () => Event_TrackerStarted },
            { no: 6, name: "tracker_stopped_event", kind: "message", oneof: "payload", T: () => Event_TrackerStopped },
            { no: 7, name: "tracker_routes_added_event", kind: "message", oneof: "payload", T: () => Event_TrackerRoutesAdded },
            { no: 8, name: "tracker_route_removed_event", kind: "message", oneof: "payload", T: () => Event_TrackerRouteRemoved },
            { no: 9, name: "tracker_routes_reseted_event", kind: "message", oneof: "payload", T: () => Event_TrackerRoutesReseted },
            { no: 10, name: "tracker_navigator_reseted_event", kind: "message", oneof: "payload", T: () => Event_TrackerNavigatorReseted },
            { no: 11, name: "tracker_navigator_jumped_event", kind: "message", oneof: "payload", T: () => Event_TrackerNavigatorJumped },
            { no: 12, name: "tracker_sensor_added_event", kind: "message", oneof: "payload", T: () => Event_TrackerSensorAdded },
            { no: 13, name: "tracker_sensor_removed_event", kind: "message", oneof: "payload", T: () => Event_TrackerSensorRemoved },
            { no: 14, name: "tracker_shutdowned_event", kind: "message", oneof: "payload", T: () => Event_TrackerShutdowned },
            { no: 15, name: "tracker_resumed_event", kind: "message", oneof: "payload", T: () => Event_TrackerResumed },
            { no: 16, name: "tracker_changed_event", kind: "message", oneof: "payload", T: () => Event_TrackerChanged }
        ]);
    }
    create(value?: PartialMessage<Event>): Event {
        const message = { kind: 0, payload: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event): Event {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* proto.gpsgend.v1.Event.Kind kind */ 1:
                    message.kind = reader.int32();
                    break;
                case /* proto.gpsgend.v1.Event.TrackerCreated tracker_created_event */ 2:
                    message.payload = {
                        oneofKind: "trackerCreatedEvent",
                        trackerCreatedEvent: Event_TrackerCreated.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerCreatedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerRemoved tracker_removed_event */ 3:
                    message.payload = {
                        oneofKind: "trackerRemovedEvent",
                        trackerRemovedEvent: Event_TrackerRemoved.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerRemovedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerUpdated tracker_updated_event */ 4:
                    message.payload = {
                        oneofKind: "trackerUpdatedEvent",
                        trackerUpdatedEvent: Event_TrackerUpdated.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerUpdatedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerStarted tracker_started_event */ 5:
                    message.payload = {
                        oneofKind: "trackerStartedEvent",
                        trackerStartedEvent: Event_TrackerStarted.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerStartedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerStopped tracker_stopped_event */ 6:
                    message.payload = {
                        oneofKind: "trackerStoppedEvent",
                        trackerStoppedEvent: Event_TrackerStopped.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerStoppedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerRoutesAdded tracker_routes_added_event */ 7:
                    message.payload = {
                        oneofKind: "trackerRoutesAddedEvent",
                        trackerRoutesAddedEvent: Event_TrackerRoutesAdded.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerRoutesAddedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerRouteRemoved tracker_route_removed_event */ 8:
                    message.payload = {
                        oneofKind: "trackerRouteRemovedEvent",
                        trackerRouteRemovedEvent: Event_TrackerRouteRemoved.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerRouteRemovedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerRoutesReseted tracker_routes_reseted_event */ 9:
                    message.payload = {
                        oneofKind: "trackerRoutesResetedEvent",
                        trackerRoutesResetedEvent: Event_TrackerRoutesReseted.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerRoutesResetedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerNavigatorReseted tracker_navigator_reseted_event */ 10:
                    message.payload = {
                        oneofKind: "trackerNavigatorResetedEvent",
                        trackerNavigatorResetedEvent: Event_TrackerNavigatorReseted.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerNavigatorResetedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerNavigatorJumped tracker_navigator_jumped_event */ 11:
                    message.payload = {
                        oneofKind: "trackerNavigatorJumpedEvent",
                        trackerNavigatorJumpedEvent: Event_TrackerNavigatorJumped.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerNavigatorJumpedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerSensorAdded tracker_sensor_added_event */ 12:
                    message.payload = {
                        oneofKind: "trackerSensorAddedEvent",
                        trackerSensorAddedEvent: Event_TrackerSensorAdded.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerSensorAddedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerSensorRemoved tracker_sensor_removed_event */ 13:
                    message.payload = {
                        oneofKind: "trackerSensorRemovedEvent",
                        trackerSensorRemovedEvent: Event_TrackerSensorRemoved.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerSensorRemovedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerShutdowned tracker_shutdowned_event */ 14:
                    message.payload = {
                        oneofKind: "trackerShutdownedEvent",
                        trackerShutdownedEvent: Event_TrackerShutdowned.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerShutdownedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerResumed tracker_resumed_event */ 15:
                    message.payload = {
                        oneofKind: "trackerResumedEvent",
                        trackerResumedEvent: Event_TrackerResumed.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerResumedEvent)
                    };
                    break;
                case /* proto.gpsgend.v1.Event.TrackerChanged tracker_changed_event */ 16:
                    message.payload = {
                        oneofKind: "trackerChangedEvent",
                        trackerChangedEvent: Event_TrackerChanged.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).trackerChangedEvent)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* proto.gpsgend.v1.Event.Kind kind = 1; */
        if (message.kind !== 0)
            writer.tag(1, WireType.Varint).int32(message.kind);
        /* proto.gpsgend.v1.Event.TrackerCreated tracker_created_event = 2; */
        if (message.payload.oneofKind === "trackerCreatedEvent")
            Event_TrackerCreated.internalBinaryWrite(message.payload.trackerCreatedEvent, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerRemoved tracker_removed_event = 3; */
        if (message.payload.oneofKind === "trackerRemovedEvent")
            Event_TrackerRemoved.internalBinaryWrite(message.payload.trackerRemovedEvent, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerUpdated tracker_updated_event = 4; */
        if (message.payload.oneofKind === "trackerUpdatedEvent")
            Event_TrackerUpdated.internalBinaryWrite(message.payload.trackerUpdatedEvent, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerStarted tracker_started_event = 5; */
        if (message.payload.oneofKind === "trackerStartedEvent")
            Event_TrackerStarted.internalBinaryWrite(message.payload.trackerStartedEvent, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerStopped tracker_stopped_event = 6; */
        if (message.payload.oneofKind === "trackerStoppedEvent")
            Event_TrackerStopped.internalBinaryWrite(message.payload.trackerStoppedEvent, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerRoutesAdded tracker_routes_added_event = 7; */
        if (message.payload.oneofKind === "trackerRoutesAddedEvent")
            Event_TrackerRoutesAdded.internalBinaryWrite(message.payload.trackerRoutesAddedEvent, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerRouteRemoved tracker_route_removed_event = 8; */
        if (message.payload.oneofKind === "trackerRouteRemovedEvent")
            Event_TrackerRouteRemoved.internalBinaryWrite(message.payload.trackerRouteRemovedEvent, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerRoutesReseted tracker_routes_reseted_event = 9; */
        if (message.payload.oneofKind === "trackerRoutesResetedEvent")
            Event_TrackerRoutesReseted.internalBinaryWrite(message.payload.trackerRoutesResetedEvent, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerNavigatorReseted tracker_navigator_reseted_event = 10; */
        if (message.payload.oneofKind === "trackerNavigatorResetedEvent")
            Event_TrackerNavigatorReseted.internalBinaryWrite(message.payload.trackerNavigatorResetedEvent, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerNavigatorJumped tracker_navigator_jumped_event = 11; */
        if (message.payload.oneofKind === "trackerNavigatorJumpedEvent")
            Event_TrackerNavigatorJumped.internalBinaryWrite(message.payload.trackerNavigatorJumpedEvent, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerSensorAdded tracker_sensor_added_event = 12; */
        if (message.payload.oneofKind === "trackerSensorAddedEvent")
            Event_TrackerSensorAdded.internalBinaryWrite(message.payload.trackerSensorAddedEvent, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerSensorRemoved tracker_sensor_removed_event = 13; */
        if (message.payload.oneofKind === "trackerSensorRemovedEvent")
            Event_TrackerSensorRemoved.internalBinaryWrite(message.payload.trackerSensorRemovedEvent, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerShutdowned tracker_shutdowned_event = 14; */
        if (message.payload.oneofKind === "trackerShutdownedEvent")
            Event_TrackerShutdowned.internalBinaryWrite(message.payload.trackerShutdownedEvent, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerResumed tracker_resumed_event = 15; */
        if (message.payload.oneofKind === "trackerResumedEvent")
            Event_TrackerResumed.internalBinaryWrite(message.payload.trackerResumedEvent, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* proto.gpsgend.v1.Event.TrackerChanged tracker_changed_event = 16; */
        if (message.payload.oneofKind === "trackerChangedEvent")
            Event_TrackerChanged.internalBinaryWrite(message.payload.trackerChangedEvent, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event
 */
export const Event = new Event$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerCreated$Type extends MessageType<Event_TrackerCreated> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerCreated", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "created_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerCreated>): Event_TrackerCreated {
        const message = { trackerId: "", createdAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerCreated>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerCreated): Event_TrackerCreated {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 created_at */ 2:
                    message.createdAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerCreated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 created_at = 2; */
        if (message.createdAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerCreated
 */
export const Event_TrackerCreated = new Event_TrackerCreated$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerRemoved$Type extends MessageType<Event_TrackerRemoved> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerRemoved", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerRemoved>): Event_TrackerRemoved {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerRemoved>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerRemoved): Event_TrackerRemoved {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 2:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerRemoved, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 2; */
        if (message.updatedAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerRemoved
 */
export const Event_TrackerRemoved = new Event_TrackerRemoved$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerUpdated$Type extends MessageType<Event_TrackerUpdated> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerUpdated", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerUpdated>): Event_TrackerUpdated {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerUpdated>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerUpdated): Event_TrackerUpdated {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 2:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerUpdated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 2; */
        if (message.updatedAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerUpdated
 */
export const Event_TrackerUpdated = new Event_TrackerUpdated$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerStarted$Type extends MessageType<Event_TrackerStarted> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerStarted", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerStarted>): Event_TrackerStarted {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerStarted>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerStarted): Event_TrackerStarted {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 2:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerStarted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 2; */
        if (message.updatedAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerStarted
 */
export const Event_TrackerStarted = new Event_TrackerStarted$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerStopped$Type extends MessageType<Event_TrackerStopped> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerStopped", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerStopped>): Event_TrackerStopped {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerStopped>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerStopped): Event_TrackerStopped {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 2:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerStopped, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 2; */
        if (message.updatedAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerStopped
 */
export const Event_TrackerStopped = new Event_TrackerStopped$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerRoutesAdded$Type extends MessageType<Event_TrackerRoutesAdded> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerRoutesAdded", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "routes_id", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerRoutesAdded>): Event_TrackerRoutesAdded {
        const message = { trackerId: "", routesId: [], updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerRoutesAdded>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerRoutesAdded): Event_TrackerRoutesAdded {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* repeated string routes_id */ 2:
                    message.routesId.push(reader.string());
                    break;
                case /* int64 updated_at */ 3:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerRoutesAdded, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* repeated string routes_id = 2; */
        for (let i = 0; i < message.routesId.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.routesId[i]);
        /* int64 updated_at = 3; */
        if (message.updatedAt !== 0n)
            writer.tag(3, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerRoutesAdded
 */
export const Event_TrackerRoutesAdded = new Event_TrackerRoutesAdded$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerRouteRemoved$Type extends MessageType<Event_TrackerRouteRemoved> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerRouteRemoved", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "route_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerRouteRemoved>): Event_TrackerRouteRemoved {
        const message = { trackerId: "", routeId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerRouteRemoved>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerRouteRemoved): Event_TrackerRouteRemoved {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* string route_id */ 2:
                    message.routeId = reader.string();
                    break;
                case /* int64 updated_at */ 3:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerRouteRemoved, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* string route_id = 2; */
        if (message.routeId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.routeId);
        /* int64 updated_at = 3; */
        if (message.updatedAt !== 0n)
            writer.tag(3, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerRouteRemoved
 */
export const Event_TrackerRouteRemoved = new Event_TrackerRouteRemoved$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerRoutesReseted$Type extends MessageType<Event_TrackerRoutesReseted> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerRoutesReseted", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerRoutesReseted>): Event_TrackerRoutesReseted {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerRoutesReseted>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerRoutesReseted): Event_TrackerRoutesReseted {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 2:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerRoutesReseted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 2; */
        if (message.updatedAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerRoutesReseted
 */
export const Event_TrackerRoutesReseted = new Event_TrackerRoutesReseted$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerNavigatorReseted$Type extends MessageType<Event_TrackerNavigatorReseted> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerNavigatorReseted", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerNavigatorReseted>): Event_TrackerNavigatorReseted {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerNavigatorReseted>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerNavigatorReseted): Event_TrackerNavigatorReseted {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 2:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerNavigatorReseted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 2; */
        if (message.updatedAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerNavigatorReseted
 */
export const Event_TrackerNavigatorReseted = new Event_TrackerNavigatorReseted$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerNavigatorJumped$Type extends MessageType<Event_TrackerNavigatorJumped> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerNavigatorJumped", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerNavigatorJumped>): Event_TrackerNavigatorJumped {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerNavigatorJumped>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerNavigatorJumped): Event_TrackerNavigatorJumped {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 2:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerNavigatorJumped, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 2; */
        if (message.updatedAt !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerNavigatorJumped
 */
export const Event_TrackerNavigatorJumped = new Event_TrackerNavigatorJumped$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerSensorAdded$Type extends MessageType<Event_TrackerSensorAdded> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerSensorAdded", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "senesor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerSensorAdded>): Event_TrackerSensorAdded {
        const message = { trackerId: "", senesorId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerSensorAdded>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerSensorAdded): Event_TrackerSensorAdded {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* string senesor_id */ 2:
                    message.senesorId = reader.string();
                    break;
                case /* int64 updated_at */ 3:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerSensorAdded, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* string senesor_id = 2; */
        if (message.senesorId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.senesorId);
        /* int64 updated_at = 3; */
        if (message.updatedAt !== 0n)
            writer.tag(3, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerSensorAdded
 */
export const Event_TrackerSensorAdded = new Event_TrackerSensorAdded$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerSensorRemoved$Type extends MessageType<Event_TrackerSensorRemoved> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerSensorRemoved", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "senesor_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerSensorRemoved>): Event_TrackerSensorRemoved {
        const message = { trackerId: "", senesorId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerSensorRemoved>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerSensorRemoved): Event_TrackerSensorRemoved {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* string senesor_id */ 2:
                    message.senesorId = reader.string();
                    break;
                case /* int64 updated_at */ 3:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerSensorRemoved, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* string senesor_id = 2; */
        if (message.senesorId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.senesorId);
        /* int64 updated_at = 3; */
        if (message.updatedAt !== 0n)
            writer.tag(3, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerSensorRemoved
 */
export const Event_TrackerSensorRemoved = new Event_TrackerSensorRemoved$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerShutdowned$Type extends MessageType<Event_TrackerShutdowned> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerShutdowned", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerShutdowned>): Event_TrackerShutdowned {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerShutdowned>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerShutdowned): Event_TrackerShutdowned {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 3:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerShutdowned, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 3; */
        if (message.updatedAt !== 0n)
            writer.tag(3, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerShutdowned
 */
export const Event_TrackerShutdowned = new Event_TrackerShutdowned$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerResumed$Type extends MessageType<Event_TrackerResumed> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerResumed", [
            { no: 1, name: "tracker_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "updated_at", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerResumed>): Event_TrackerResumed {
        const message = { trackerId: "", updatedAt: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerResumed>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerResumed): Event_TrackerResumed {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tracker_id */ 1:
                    message.trackerId = reader.string();
                    break;
                case /* int64 updated_at */ 3:
                    message.updatedAt = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerResumed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string tracker_id = 1; */
        if (message.trackerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.trackerId);
        /* int64 updated_at = 3; */
        if (message.updatedAt !== 0n)
            writer.tag(3, WireType.Varint).int64(message.updatedAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerResumed
 */
export const Event_TrackerResumed = new Event_TrackerResumed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event_TrackerChanged$Type extends MessageType<Event_TrackerChanged> {
    constructor() {
        super("proto.gpsgend.v1.Event.TrackerChanged", [
            { no: 1, name: "packet", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<Event_TrackerChanged>): Event_TrackerChanged {
        const message = { packet: new Uint8Array(0) };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Event_TrackerChanged>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TrackerChanged): Event_TrackerChanged {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes packet */ 1:
                    message.packet = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Event_TrackerChanged, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bytes packet = 1; */
        if (message.packet.length)
            writer.tag(1, WireType.LengthDelimited).bytes(message.packet);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message proto.gpsgend.v1.Event.TrackerChanged
 */
export const Event_TrackerChanged = new Event_TrackerChanged$Type();
