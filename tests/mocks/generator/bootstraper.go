// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/mmadfox/projects/gpsio/gpsgend/internal/generator/bootstraper.go

// Package mock_generator is a generated GoMock package.
package mock_generator

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	generator "github.com/mmadfox/gpsgend/internal/generator"
)

// MockBootstraper is a mock of Bootstraper interface.
type MockBootstraper struct {
	ctrl     *gomock.Controller
	recorder *MockBootstraperMockRecorder
}

// MockBootstraperMockRecorder is the mock recorder for MockBootstraper.
type MockBootstraperMockRecorder struct {
	mock *MockBootstraper
}

// NewMockBootstraper creates a new mock instance.
func NewMockBootstraper(ctrl *gomock.Controller) *MockBootstraper {
	mock := &MockBootstraper{ctrl: ctrl}
	mock.recorder = &MockBootstraperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBootstraper) EXPECT() *MockBootstraperMockRecorder {
	return m.recorder
}

// LoadTrackers mocks base method.
func (m *MockBootstraper) LoadTrackers(ctx context.Context, p generator.Processes) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadTrackers", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadTrackers indicates an expected call of LoadTrackers.
func (mr *MockBootstraperMockRecorder) LoadTrackers(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadTrackers", reflect.TypeOf((*MockBootstraper)(nil).LoadTrackers), ctx, p)
}

// UnloadTrackers mocks base method.
func (m *MockBootstraper) UnloadTrackers(ctx context.Context, p generator.Processes) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnloadTrackers", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// UnloadTrackers indicates an expected call of UnloadTrackers.
func (mr *MockBootstraperMockRecorder) UnloadTrackers(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnloadTrackers", reflect.TypeOf((*MockBootstraper)(nil).UnloadTrackers), ctx, p)
}
